#-----------------------------------------------------------#
#			MODULE 5			    #
#-----------------------------------------------------------#	
# generates .tsv data files containing allelic coverage and
# total RPKM values over user-define intervals. These int-
# ervals can be gene exons, gene promoters, known enhancers
# CpG islands, etc
# Requirements: indexed reference genome, interval file in
# gff formats (General Feature Format).
# Also generates normalized (to filtered read count) UCSC
# TrackHub track hierarchy.
#-----------------------------------------------------------#

#!/bin/bash

pushd `dirname $0` > /dev/null
AL_DIR_TOOLS=`pwd -P` # get the full path to itself
popd > /dev/null

source $AL_DIR_TOOLS/alea.config

##############################################################################
#############   Module 5: statistical analysis
##############################################################################

PARAM_VALID=1
PARAM_SINGLE_READS=1
if [ $AL_USE_CONCATENATED_GENOME = 1 ]; then
    if [ $# -eq 7 ]; then
        PARAM_REFERENCE_BAM=$1
	PARAM_STRAIN1=$2
	PARAM_STRAIN2=$3
        PARAM_INTERVALS=$4
	PARAM_CHROM_SIZES=$5
	PARAM_MIN_MAPQ=$6
	PARAM_OUTPUT=$7
    else
        PARAM_VALID=0
    fi
else
    PARAM_VALID=0
fi

if [ $PARAM_VALID = 0 ]; then
    echo "
Usage:
    using concatenated genome method (AL_USE_CONCATENATED_GENOME=1):
    alea createReport <input_total.bam> <strain1> <strain2> <interval file> <chromosome sizes> <minimum MAPQ filter> <output folder>
Options:
    input_bam     input bam generated by aligning to the reference genome (PREFIX_total.bam)
		  PREFIX will be used as basename for all subsequent files in this module
		      
    strain1	  strain1-specific and projected bedGraph file (in output folder specified in createTracks)
    strain2	  strain2-specific and projected bedGraph file (in output folder specified in createTracks)
    
    intervals     General Feature Format (GFF) used for counting reads
    		  supplied in folder ./gff/
		  if using custom gff, please match supplied format
                    
    min MAPQ   	          minimum mapping quality for an aligned read to be kept
		          this will change depending on the aligner used.
		          for BWA, we suggest MAPQ 10
		          for bowtie2, we suggest MAPQ X
		          for Tophat2, we suggest MAPQ X
		          for STAR, we suggest MAPQ 1
		          for Bismark, we suggest MAPQ X
		      
    output folder         please specificy the same folder as specific in createTracks

Output:
        
    analysis.tsv          a table with allelic coverage, total RPKM, parental ratios
		          and other statistics for each interval in the GFF file.
			
    UCSC_Track_Hub        a UCSC-compatible directory with total and allelic bigWigs

Examples:
    (AL_USE_BWA=1)
    alea createReport H3K4me3Liver_total.bam C57BL6J CAST_EiJ ./gff/transcriptionStartSites_mm10.gff mm10.sizes 10 promoter_analysis
    (AL_USE_STAR=1)
    alea createReport F1hybridLiver_total.bam C57BL6J CAST_EiJ ./gff/RefseqGenes_mm10.gff mm10.sizes 1 gene_expression_analysis

"
exit 1
fi

cd "$PARAM_OUTPUT"/
ln -s ../"$PARAM_REFERENCE_BAM" ./

### generate normalized bigwigs
### and place them in UCSC track hub
function TrackHubGenerate {
	local PARAM_INPUT_PREFIX=${PARAM_REFERENCE_BAM//_total.bam/}
	local VAR_F=$AL_BAM2WIG_PARAM_FILTERING_FLAG  # filtering flag [1540]
	local PARAM_GENOME="mm10"

	mkdir -p Track_Hub/"$PARAM_GENOME"
	touch ./Track_Hub/"$PARAM_GENOME"/trackDb.txt ./Track_Hub/hub.txt ./Track_Hub/genomes.txt
	
 	RPM_SCALING_FACTOR_tmp=`samtools view -c "$PARAM_REFERENCE_BAM"`
	RPM_SCALING_FACTOR=$(echo "scale=25;1000000/$RPM_SCALING_FACTOR_tmp" | bc)
	echo ""$PARAM_REFERENCE_BAM" scaling factor: "$RPM_SCALING_FACTOR"" >> "$AL_LOG"/log.txt

	awk -F "\t" -v RPM_SCALE="$RPM_SCALING_FACTOR" 'BEGIN {OFS="\t"; print $0} {
		$4 *= RPM_SCALE
		print $0;}' "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1".bedGraph > "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_tmp1.bedGraph
	grep -v "type" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_tmp1.bedGraph > "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_tmp2.bedGraph
	sort -k1,1 -k2,2n "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_tmp2.bedGraph > "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_tmp3.bedGraph
	$AL_BIN_BEDGRAPH_TO_BW "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_tmp3.bedGraph "$PARAM_CHROM_SIZES" ./Track_Hub/"$PARAM_GENOME"/"$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1".bw

	awk -F "\t" -v RPM_SCALE="$RPM_SCALING_FACTOR" 'BEGIN {OFS="\t"; print $0} {
                $4 *= RPM_SCALE
                print $0;}' "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2".bedGraph > "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2"_tmp1.bedGraph
	grep -v "type" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2"_tmp1.bedGraph > "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2"_tmp2.bedGraph
	sort -k1,1 -k2,2n "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2"_tmp2.bedGraph > "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2"_tmp3.bedGraph
	$AL_BIN_BEDGRAPH_TO_BW "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2"_tmp3.bedGraph "$PARAM_CHROM_SIZES" ./Track_Hub/"$PARAM_GENOME"/"$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2".bw


	#generate normalized bedGraph using reference-aligned bam
        aleaCheckFileExists "$PARAM_REFERENCE_BAM"
        $AL_BIN_SAMTOOLS view -bh -F "$VAR_F" -q "$PARAM_MIN_MAPQ" "$PARAM_REFERENCE_BAM" > "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ".bam
        $AL_BIN_BEDTOOLS genomecov -ibam "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ".bam -bg -split -scale "$RPM_SCALING_FACTOR" > "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ".bedGraph
	

	awk -F "\t" -v RPM_SCALE="$RPM_SCALING_FACTOR" 'BEGIN {OFS="\t"; print $0} {
                $4 *= RPM_SCALE
                print $0;}' "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ".bedGraph > "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ"_tmp1.bedGraph
	grep -v "type" "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ"_tmp1.bedGraph > "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ"_tmp2.bedGraph
	sort -k1,1 -k2,2n "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ"_tmp2.bedGraph > "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ"_tmp3.bedGraph
	cp "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ"_tmp3.bedGraph "$PARAM_INPUT_PREFIX"_total.bedGraph
	$AL_BIN_BEDGRAPH_TO_BW "$PARAM_INPUT_PREFIX"_F"$VAR_F"_q"$PARAM_MIN_MAPQ"_tmp3.bedGraph "$PARAM_CHROM_SIZES" ./Track_Hub/"$PARAM_GENOME"/"$PARAM_INPUT_PREFIX"_total.bw

	### code adapted from Aaron Bogutz, Louis Lefebvre lab (UBC)
	printf "genome "$PARAM_GENOME"\ntrackDb "$PARAM_GENOME"/trackDb.txt" > ./Track_Hub/genomes.txt
	printf "hub <name>\nshortLabel <short name>\nlongLabel <Hub to display data at UCSC>\ngenomesFile genomes.txt\nemail <email>" > ./Track_Hub/hub.txt
	printf "track %s\ncontainer multiWig\nshortLabel %s\nlongLabel %s\ntype bigWig\nvisibility full\nmaxHeightPixels 150:60:32\nconfigurable on\nautoScale on\naggregate transparentOverlay\nshowSubtrackColorOnUi on\npriority 1.0\n\n" "$PARAM_INPUT_PREFIX" "$PARAM_INPUT_PREFIX" "$PARAM_INPUT_PREFIX" | tee -a ./Track_Hub/"$PARAM_GENOME"/trackDb.txt
	printf "\ttrack %s\n\tparent %s\n\tshortLabel %s\n\tlongLabel %s\n\ttype bigWig\n\tbigDataUrl %s\n\tcolor 215,215,215\n\taltColor 225,225,225\n\tautoScale on\n\n" "$PARAM_INPUT_PREFIX"_total "$PARAM_INPUT_PREFIX" "$PARAM_INPUT_PREFIX"_total "$PARAM_INPUT_PREFIX"_total "$PARAM_INPUT_PREFIX"_total.bw | tee -a ./Track_Hub/"$PARAM_GENOME"/trackDb.txt
	printf "\ttrack %s\n\tparent %s\n\tshortLabel %s\n\tlongLabel %s\n\ttype bigWig\n\tbigDataUrl %s\n\tcolor 215,215,215\n\taltColor 225,225,225\n\tautoScale on\n\n" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1" "$PARAM_INPUT_PREFIX" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1".bw | tee -a ./Track_Hub/"$PARAM_GENOME"/trackDb.txt
	printf "\ttrack %s\n\tparent %s\n\tshortLabel %s\n\tlongLabel %s\n\ttype bigWig\n\tbigDataUrl %s\n\tcolor 215,215,215\n\taltColor 225,225,225\n\tautoScale on\n\n" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2" "$PARAM_INPUT_PREFIX" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2".bw | tee -a ./Track_Hub/"$PARAM_GENOME"/trackDb.txt
	$AL_BIN_HUBCHECK -noTracks ./Track_Hub/hub.txt
	rm *tmp*.bedGraph
}

TrackHubGenerate





function generateRPKM {
#	$AL_BIN_PYTHON $AL_BIN_RPKMCOUNT -i "$PARAM_PREFIX".bam -r "$PARAM_INTERVALS" -o "$PARAM_PREFIX" -q "$PARAM_MINMAPQ" -e
#}

function generateAllelicCoverageAndRPKM {
#input gff file
#input bedGraph files from 1) bedtools genomecov (total.bedgraph) and 2) alea project (strain1.bedgraph strain2.bedgraph)
#convert to smart format: unique "genes" i.e. no isoforms (done in Python) BY EXON
#bedtools intersect the unique exon and bedgraph files
#using geneName value to merge (SUM) counts over all exons from the same gene
#divide the total.bedgraph column by the calculated mRNA size 
#report the strain1.bedgraph and strain2.bedgraph columns as COVERAGE
#calculate final column: parental_skew / parental_ratio / bias (strain2/(strain1+2)

	$AL_BIN_BEDTOOLS coverage -a "$PARAM_INTERVALS" -b "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1".bedGraph > "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_intervalCoverage_tmp1.tsv
	awk -F"\t" '{BEGIN OFS="\t"} {print $1, $2, $3, $4, $5, $6, $7, $8*$9}' "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_intervalCoverage_tmp1.tsv > "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_intervalCoverage_tmp2.tsv
	grep -v "#" "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_intervalCoverage_tmp2.tsv | sort -k1,1 -k2,2n > "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_intervalCoverage_tmp3.tsv

	
	#$AL_BIN_BEDTOOLS coverage -a "$PARAM_INTERVALS" -b "$PARAM_INPUT_PREFIX"_total.bedGraph > "$PARAM_INPUT_PREFIX"_total_intervalCoverage_tmp1.tsv
	#awk -F"\t" '{BEGIN OFS="\t"} {print $1, $2, $3, $4, $5, $6, $7, $8*$9/$7}' "$PARAM_INPUT_PREFIX"_total_intervalCoverage_tmp1.tsv > "$PARAM_INPUT_PREFIX"_total_intervalCoverage_tmp2.tsv



	#join tables into one file
	echo "#chr	start	end	strand	Name	GeneID	exonLength	"$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_allelicCoverage	"$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2"_allelicCoverage	"$PARAM_INPUT_PREFIX"_RPKM > "$PARAM_INPUT_PREFIX"_intervalAnalysisTable.tsv
	join -a1 -a2 -a3 -1 5 -2 5 -3 5 -o 1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,2.8,3.8 -e "0" "$PARAM_INPUT_PREFIX"_total_intervalCoverage_tmp2.tsv "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN1"_intervalCoverage_tmp2.tsv "$PARAM_INPUT_PREFIX"_"$PARAM_STRAIN2"_intervalCoverage_tmp2.tsv >> "$PARAM_INPUT_PREFIX"_intervalAnalysisTable.tsv
	"$PARAM_INPUT_PREFIX"_intervalAnalysis.tsv
}


